{"ast":null,"code":"import { AppService, Foo } from './app.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.service\";\nexport let FooComponent = /*#__PURE__*/(() => {\n  var _class;\n  class FooComponent {\n    constructor(_service) {\n      this._service = _service;\n      this.foo = new Foo(1, 'sample foo');\n      this.foosUrl = 'http://localhost:8081/jwt-resource-server/api/foos/';\n    }\n    getFoo() {\n      this._service.getResource(this.foosUrl + this.foo.id).subscribe(data => this.foo = data, error => this.foo.name = 'Error');\n    }\n  }\n  _class = FooComponent;\n  _class.ɵfac = function FooComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.AppService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"foo-details\"]],\n    features: [i0.ɵɵProvidersFeature([AppService])],\n    decls: 16,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"col-sm-12\"], [1, \"col-sm-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function FooComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Foo Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"span\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 2);\n        i0.ɵɵtext(10, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"span\");\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function FooComponent_Template_button_click_14_listener() {\n          return ctx.getFoo();\n        });\n        i0.ɵɵtext(15, \"New Foo\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.foo.id);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.foo.name);\n      }\n    },\n    encapsulation: 2\n  });\n  return FooComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}